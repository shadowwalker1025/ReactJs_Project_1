{"version":3,"sources":["component/NewsCard.js","NewsPage.js","App.js","index.js"],"names":["NewsCard","_ref","article","react_default","a","createElement","className","title","points","author","num_comments","href","url","NewsPage","_useState","useState","_useState2","Object","slicedToArray","currentPage","setCurrentPage","_useState3","_useState4","articles","setArticles","_useState5","_useState6","isLoading","setIsLoading","_useState7","_useState8","totalPages","setTotalPages","_useState9","_useState10","query","setQuery","_useState11","_useState12","searchInput","setSearchInput","useEffect","asyncToGenerator","regenerator_default","mark","_callee","_yield$axios$get","data","hits","nbPages","wrap","_context","prev","next","axios","get","params","page","sent","t0","console","log","finish","stop","apply","this","arguments","fetchData","onSubmit","event","preventDefault","placeholder","value","onChange","target","react_paginate_default","nextLabel","previousLabel","breakLabel","forcePage","pageCount","renderOnZeroPageCount","onPageChange","selected","activeClassName","previousClassName","nextClassName","map","component_NewsCard","key","objectID","App","src_NewsPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.2c6041e0.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction NewsCard({ article }) {\n  return (\n    <div className='news-card'>\n        <h3> { article.title }</h3>\n        <h5> {article.points} points by {article.author} | {article.num_comments} comments</h5>\n        <a href={article.url}>Read More</a>\n    </div>\n  )\n}\n\nexport default NewsCard;","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport NewsCard from \"./component/NewsCard\";\nimport ReactPaginate from 'react-paginate';\n\n \nfunction NewsPage() {\n    const [currentPage, setCurrentPage] = useState(0);\n    const [articles, setArticles] = useState([]);\n    const [isLoading, setIsLoading] = useState([true]);\n    const [totalPages, setTotalPages] = useState(0);\n    const [query, setQuery] = useState(\"\");\n    const [searchInput, setSearchInput] = useState(\"\");\n\n\n    const handlePageChange = event => {\n        setCurrentPage(event.selected);\n    }\n\n    \n\n    // articles.sort(function (a, b) {\n    //     var dateA = new Date(a.date), dateB = new Date(b.date)\n    //     return dateA - dateB\n    // });\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n        setCurrentPage(0);\n        setQuery(searchInput);\n    }\n\n    useEffect(() => {\n        setIsLoading(true);\n        const fetchData = async() => {\n            try{\n                const {data} = await axios.get(\n                    \"https://hn.algolia.com/api/v1/search?\",\n                    {\n                        params: {page: currentPage, query},\n                    }\n                    );\n                const { hits, nbPages } = data;\n                setArticles(hits);\n                setTotalPages(nbPages);\n            } catch(err) {\n                console.log(err);\n            } finally{\n                setIsLoading(false);\n            }\n\n        };\n        fetchData();\n    }, [currentPage, query]);\n\n  return (\n    <div className='container'>\n        <h1>Search Hacker News</h1>\n        <form className='search-form' onSubmit={handleSubmit}>\n            <input \n                // className='search-bar' \n                placeholder='Search For News' \n                value={searchInput}\n                onChange={event => setSearchInput(event.target.value)}\n            />\n            {/* <button type='submit'> Search </button> */}\n        </form>\n        <ReactPaginate\n            nextLabel= \">>\"\n            previousLabel=\"<<\"\n            breakLabel= \"...\"\n            forcePage={currentPage}\n            pageCount={totalPages}\n            renderOnZeroPageCount={null}\n            onPageChange={handlePageChange}\n            className='pagination'\n            activeClassName='active-page'\n            previousClassName='previous-page'\n            nextClassName='next-page'\n        />\n        <div className='news-container'>\n            {isLoading ? (\n                <p>Loading....</p> \n            ): (\n                articles.map((article) => (\n                    <NewsCard article={article} key={articles.objectID}/>\n                ))\n            )}\n        </div>\n    </div>\n  );\n};\n\nexport default NewsPage;","import './App.css';\nimport NewsPage from './NewsPage';\nimport React from 'react';\n\n\nfunction App() {\n  return( <NewsPage /> )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}